---
openapi: 3.0.3
info:
  title: Keycloak Multi-Tenancy
  version: 23.2.1
servers:
- url: "{{keycloakUrl}}/auth/realms/{{realmName}}"
paths:
  /tenants:
    get:
      summary: List tenants
      operationId: listTenants
      parameters:
      - name: first
        in: query
        description: Pagination offset
        schema:
          format: int32
          type: integer
      - name: max
        in: query
        description: Maximum results size (defaults to 100)
        schema:
          format: int32
          type: integer
      - name: search
        in: query
        description: Tenant name
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantRepresentation'
        "401":
          description: Unauthorized
    post:
      summary: Create a tenant
      operationId: createTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRepresentation'
        required: true
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /tenants/{tenantId}:
    get:
      summary: Get tenant
      operationId: getTenant
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                required:
                - name
                type: object
                properties:
                  id:
                    type: string
                    readOnly: true
                  name:
                    type: string
                  realm:
                    type: string
                    readOnly: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      summary: Update tenant
      operationId: updateTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRepresentation'
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      summary: Delete tenant
      operationId: deleteTenant
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
  /tenants/{tenantId}/invitations:
    get:
      summary: List invitations
      operationId: listInvitations
      parameters:
      - name: first
        in: query
        description: Pagination offset
        schema:
          format: int32
          type: integer
      - name: max
        in: query
        description: Maximum results size (defaults to 100)
        schema:
          format: int32
          type: integer
      - name: search
        in: query
        description: Invitee email
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantInvitationRepresentation'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      summary: Create invitation
      operationId: createInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantInvitationRepresentation'
        required: true
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
  /tenants/{tenantId}/invitations/{invitationId}:
    delete:
      summary: Revoke invitation
      operationId: revokeInvitation
      parameters:
      - name: invitationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
  /tenants/{tenantId}/memberships:
    get:
      summary: List tenant memberships
      operationId: listMemberships
      parameters:
      - name: first
        in: query
        description: Pagination offset
        schema:
          format: int32
          type: integer
      - name: max
        in: query
        description: Maximum results size (defaults to 100)
        schema:
          format: int32
          type: integer
      - name: search
        in: query
        description: Member email
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantMembershipRepresentation'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
  /tenants/{tenantId}/memberships/{membershipId}:
    delete:
      summary: Revoke tenant membership
      operationId: revokeMembership
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    patch:
      summary: Update tenant membership
      operationId: updateMembership
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantMembershipRepresentation'
        required: true
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
components:
  schemas:
    TenantInvitationRepresentation:
      required:
      - email
      - roles
      type: object
      properties:
        id:
          type: string
          readOnly: true
        tenantId:
          type: string
          readOnly: true
        email:
          type: string
        locale:
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
        invitedBy:
          type: string
          readOnly: true
    TenantMembershipRepresentation:
      required:
      - roles
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: object
          properties:
            id:
              type: string
            createdTimestamp:
              type: number
            username:
              type: string
            enabled:
              type: boolean
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
            emailVerified:
              type: boolean
            federationLink:
              type: string
          readOnly: true
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
    TenantRepresentation:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        realm:
          type: string
          readOnly: true
