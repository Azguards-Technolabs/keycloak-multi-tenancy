---
openapi: 3.1.0
components:
  schemas:
    TenantInvitationRepresentation:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        tenantId:
          type: string
          readOnly: true
        email:
          type: string
        locale:
          type: string
        roles:
          type: array
          uniqueItems: true
          items:
            type: string
        invitedBy:
          type: string
          readOnly: true
      required:
      - email
      - roles
    TenantMembershipRepresentation:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: object
          readOnly: true
          properties:
            id:
              type: string
            createdTimestamp:
              type: number
            username:
              type: string
            enabled:
              type: boolean
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
            emailVerified:
              type: boolean
            federationLink:
              type: string
        roles:
          type: array
          uniqueItems: true
          items:
            type: string
      required:
      - roles
    TenantRepresentation:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        realm:
          type: string
          readOnly: true
        mobileNumber:
          type: string
          description: Mobile number of the tenant
        countryCode:
          type: string
          description: Country code of the tenant's mobile number
        status:
          type: string
          description: "Status of the tenant (e.g., ACTIVE, INACTIVE, PENDING)"
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Attributes of the tenant
      required:
      - name
    UserMembershipRepresentation:
      type: object
      properties:
        id:
          type: string
        tenantId:
          type: string
        roles:
          type: array
          items:
            type: string
paths:
  /tenants:
    get:
      summary: List tenants
      operationId: listTenants
      parameters:
      - description: "Tenant country code (exact match, e.g., 91)"
        name: countryCode
        in: query
        schema:
          type: string
      - description: Tenant mobile number (exact match)
        name: mobileNumber
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TenantRepresentation"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      summary: Create a tenant
      operationId: createTenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TenantRepresentation"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantRepresentation"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
  /tenants/users/{userId}:
    get:
      summary: List memberships for a specific user ID
      operationId: listMembershipsByUserId
      parameters:
      - description: User ID to fetch associated memberships
        name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserMembershipRepresentation"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: User not found
        "500":
          description: Internal Server Error
  /tenants/{tenantId}:
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update tenant
      operationId: updateTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TenantRepresentation"
        required: true
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    get:
      summary: Get tenant
      operationId: getTenant
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    readOnly: true
                  name:
                    type: string
                  realm:
                    type: string
                    readOnly: true
                  mobileNumber:
                    type: string
                    description: Mobile number of the tenant
                  countryCode:
                    type: string
                    description: Country code of the tenant's mobile number
                  status:
                    type: string
                    description: "Status of the tenant (e.g., ACTIVE, INACTIVE, PENDING)"
                  attributes:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                    description: Attributes of the tenant
                required:
                - name
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      summary: Delete tenant
      operationId: deleteTenant
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /tenants/{tenantId}/invitations:
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
    get:
      summary: List invitations
      operationId: listInvitations
      parameters:
      - description: Pagination offset
        name: first
        in: query
        schema:
          type: integer
          format: int32
      - description: Maximum results size (defaults to 100)
        name: max
        in: query
        schema:
          type: integer
          format: int32
      - description: Invitee email
        name: search
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TenantInvitationRepresentation"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      summary: Create invitation
      operationId: createInvitation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TenantInvitationRepresentation"
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /tenants/{tenantId}/invitations/{invitationId}:
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
    delete:
      summary: Revoke invitation
      operationId: revokeInvitation
      parameters:
      - name: invitationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /tenants/{tenantId}/memberships:
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
    get:
      summary: List tenant memberships
      operationId: listMemberships
      parameters:
      - description: Pagination offset
        name: first
        in: query
        schema:
          type: integer
          format: int32
      - description: Maximum results size (defaults to 100)
        name: max
        in: query
        schema:
          type: integer
          format: int32
      - description: Member email
        name: search
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TenantMembershipRepresentation"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /tenants/{tenantId}/memberships/users/{userId}:
    delete:
      summary: Revoke membership for a specific user in a tenant
      operationId: revokeMembershipByUserId
      parameters:
      - description: Tenant ID
        name: tenantId
        in: path
        required: true
        schema:
          type: string
      - description: User ID to revoke membership
        name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: "Tenant, User, or Membership not found"
        "500":
          description: Internal Server Error
  /tenants/{tenantId}/memberships/{membershipId}:
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Update tenant membership
      operationId: updateMembership
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TenantMembershipRepresentation"
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      summary: Revoke tenant membership
      operationId: revokeMembership
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
info:
  title: Keycloak Multi-Tenancy
  version: 26.0.6
servers:
- url: "{{keycloakUrl}}/auth/realms/{{realmName}}"
